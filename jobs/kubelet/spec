---
name: kubelet
description: |
  An agent that runs on each node in the cluster. It makes sure that
  containers are running in a pod.

  The kubelet takes a set of PodSpecs that are provided through various
  mechanisms and ensures that the containers described in those PodSpecs are
  running and healthy. The kubelet doesnâ€™t manage containers which were not
  created by Kubernetes.

  Kubelets also run kube-proxy, enabling the Kubernetes service abstraction
  by maintaining network rules on the host and performing connection
  forwarding.

packages:
  - k8s

consumes:
  - name: api
    type: k8s-apiserver

templates:
  bin/pre-start:   bin/pre-start
  tls/ca/cert.pem: tls/ca/cert.pem
  tls/ca/key.pem:  tls/ca/key.pem

  tls/admin/cert.pem: tls/admin/cert.pem
  tls/admin/key.pem:  tls/admin/key.pem

  bin/kubelet:     bin/kubelet
  etc/kubelet.yml: etc/kubelet.yml

  etc/in-k8s/kube-proxy.yml: etc/in-k8s/kube-proxy.yml

  bin/post-deploy: bin/post-deploy

properties:
  debug:
    description: Enables verbose debugging, suitable for troubleshooting.
    default:     false

  pod-cidr:
    description: Range of network IPs to assign Pods inside of Kubernetes
    default: 10.0.0.0/20

  networks.services:
    description: |
      Network CIDR range to use for Service IP allocation.
      This must NOT overlap with networks.pods.

  networks.pods:
    description: |
      Network CIDR range to use for Pod IP allocation.
      This must NOT overlap with networks.services.

  networks.nodes:
    description: |
      Network CIDR range that the Kubernetes nodes use.
